
CREATE TABLE galleryHistoryVisitEntity (
    galleryId INTEGER PRIMARY KEY NOT NULL,
    lastVisitInstant INTEGER NOT NULL, -- Epoch second
    visitCount INTEGER NOT NULL,
    FOREIGN KEY(galleryId) REFERENCES gallerySummaryEntity(id) ON DELETE CASCADE
);

countHistoryVisits:
SELECT COUNT(*) FROM viewGallerySummaryWithLanguage gs
    INNER JOIN galleryHistoryVisitEntity AS ghv ON gs.id = ghv.galleryId;

selectHistoryVisits:
SELECT gs.*, ghv.lastVisitInstant, ghv.visitCount FROM viewGallerySummaryWithLanguage gs
    INNER JOIN galleryHistoryVisitEntity AS ghv ON gs.id = ghv.galleryId
ORDER BY
    CASE WHEN :sort == 1 THEN ghv.visitCount ELSE '' END ASC,
    CASE WHEN :sort == 2 THEN ghv.visitCount ELSE '' END DESC,
    CASE WHEN :sort == 3 THEN ghv.lastVisitInstant ELSE '' END ASC,
    CASE WHEN :sort == 4 THEN ghv.lastVisitInstant ELSE '' END DESC
LIMIT :limit OFFSET :offset;

selectVisitCount:
SELECT visitCount FROM galleryHistoryVisitEntity WHERE galleryId = ? LIMIT 1;

insertVisit:
INSERT OR IGNORE INTO galleryHistoryVisitEntity (galleryId, lastVisitInstant, visitCount)
VALUES ?;

updateVisit:
UPDATE galleryHistoryVisitEntity SET lastVisitInstant=?, visitCount=? WHERE galleryId = ?;

deleteAll:
DELETE FROM galleryHistoryVisitEntity;
